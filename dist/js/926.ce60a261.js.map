{"version":3,"file":"js/926.ce60a261.js","mappings":"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","sources":["webpack://enaira-card/./src/views/Auth/loginPage.vue","webpack://enaira-card/src/views/Auth/loginPage.vue","webpack://enaira-card/./src/views/Auth/loginPage.vue?73ee","webpack://enaira-card/./src/views/Auth/loginPage.vue?3ee6"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"auth-content\"},[_c('div',[_vm._m(0),_c('form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.$router.push('/dashboard')}}},[(_vm.error)?_c('span',{staticClass:\"tw-mb-3 error-alert\"},[_vm._v(_vm._s(_vm.errors))]):_vm._e(),_c('div',{staticClass:\"field\"},[_c('input',{attrs:{\"type\":\"email\",\"name\":\"email\",\"id\":\"email\",\"placeholder\":\"xxxx@xx.xxx\"}}),_c('span',{staticClass:\"email-iccon\",attrs:{\"role\":\"button\"},on:{\"click\":function($event){_vm.typePassword = !_vm.typePassword}}},[_c('i-icon',{staticClass:\"form-icon\",attrs:{\"icon\":\"fluent:mail-24-regular\"}})],1),_c('label',{attrs:{\"for\":\"email\"}},[_vm._v(\"Email Address\")])]),_c('div',{staticClass:\"field\"},[_c('input',{attrs:{\"type\":_vm.typePassword ? 'password' : 'text',\"name\":\"password\",\"id\":\"password\",\"placeholder\":\"Password\"}}),_c('span',{staticClass:\"password-iccon\",attrs:{\"role\":\"button\"},on:{\"click\":function($event){_vm.typePassword = !_vm.typePassword}}},[_c('i-icon',{staticClass:\"form-icon\",attrs:{\"icon\":_vm.typePassword ? 'tabler:eye' : 'gridicons:not-visible'}})],1),_c('label',{attrs:{\"for\":\"password\"}},[_vm._v(\"Password\")])]),_vm._m(1)])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tw-mb-6 tw-text-center\"},[_c('img',{staticClass:\"tw-mx-auto tw-h-[67px] tw-w-[201px]\",attrs:{\"src\":require(\"@/assets/img/enaira-logo.svg\"),\"alt\":\"\"}}),_c('h5',{staticClass:\"tw-font-semibold tw-text-[22px] tw-mt-5 tw-mb-12\"},[_vm._v(\" Login to eNaira \")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tw-mt-6\"},[_c('button',{staticClass:\"primary-btn w-100\"},[_c('span',[_vm._v(\"Login\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"auth-content\">\r\n    <div>\r\n      <div class=\"tw-mb-6 tw-text-center\">\r\n        <img\r\n          src=\"@/assets/img/enaira-logo.svg\"\r\n          class=\"tw-mx-auto tw-h-[67px] tw-w-[201px]\"\r\n          alt=\"\"\r\n        />\r\n        <h5 class=\"tw-font-semibold tw-text-[22px] tw-mt-5 tw-mb-12\">\r\n          Login to eNaira\r\n        </h5>\r\n        <!-- <span class=\"tw-text-sm\"\r\n          >Don't have an account?\r\n          <router-link to=\"/register\" class=\"tw-text-primary\"\r\n            >Sign Up</router-link\r\n          >\r\n        </span> -->\r\n      </div>\r\n      <form @submit.prevent=\"$router.push('/dashboard')\">\r\n        <span v-if=\"error\" class=\"tw-mb-3 error-alert\">{{ errors }}</span>\r\n\r\n        <div class=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"xxxx@xx.xxx\"\r\n          />\r\n          <span\r\n            class=\"email-iccon\"\r\n            role=\"button\"\r\n            @click=\"typePassword = !typePassword\"\r\n          >\r\n            <i-icon icon=\"fluent:mail-24-regular\" class=\"form-icon\" />\r\n          </span>\r\n          <label for=\"email\">Email Address</label>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <input\r\n            :type=\"typePassword ? 'password' : 'text'\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <span\r\n            class=\"password-iccon\"\r\n            role=\"button\"\r\n            @click=\"typePassword = !typePassword\"\r\n          >\r\n            <i-icon\r\n              :icon=\"typePassword ? 'tabler:eye' : 'gridicons:not-visible'\"\r\n              class=\"form-icon\"\r\n            />\r\n          </span>\r\n          <label for=\"password\">Password</label>\r\n        </div>\r\n\r\n        <!-- <div class=\"tw-mb-3 tw-text-right\">\r\n          <span class=\"tw-text-[12px]\"\r\n            ><router-link to=\"/forgot-password\" class=\"tw-text-primary\"\r\n              >Forgot Password?</router-link\r\n            >\r\n          </span>\r\n        </div> -->\r\n\r\n        <div class=\"tw-mt-6\">\r\n          <button class=\"primary-btn w-100\">\r\n            <span>Login</span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- <div class=\"tw-mt-6\">\r\n          <button\r\n            @click=\"login\"\r\n            class=\"primary-btn w-100\"\r\n            :class=\"loading ? 'bg-secondary' : disabled ? 'bg-secondary' : ''\"\r\n            :disabled=\"loading || disabled\"\r\n          >\r\n            <span v-if=\"loading\"\r\n              ><i-icon\r\n                icon=\"eos-icons:bubble-loading\"\r\n                width=\"20px\"\r\n                class=\"text-white\"\r\n              />\r\n            </span>\r\n            <span v-else>Login</span>\r\n          </button>\r\n        </div> -->\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from \"vuex\";\r\nexport default {\r\n  components: {},\r\n  data: () => {\r\n    return {\r\n      credentials: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      typePassword: true,\r\n      disabled: true,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(\"auth\", [\"loginUser\"]),\r\n    login() {\r\n      let credentials = {\r\n        user_email: this.credentials.email,\r\n        user_password: this.credentials.password,\r\n      };\r\n      this.loginUser(credentials);\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.$store.commit(\"auth/REMOVE_ERROR_SUCCESS\");\r\n  },\r\n\r\n  watch: {\r\n    credentials: {\r\n      handler(val) {\r\n        if (val.email != \"\" && val.password != \"\") {\r\n          this.disabled = false;\r\n        } else {\r\n          this.disabled = true;\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapState(\"auth\", {\r\n      loading: (state) => state.loading,\r\n      error: (state) => state.error,\r\n      errors: (state) => state.validationErrors,\r\n      user: (state) => state.user,\r\n    }),\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-icon {\r\n  font-size: 20px;\r\n  color: var(--gray-400);\r\n}\r\n.field {\r\n  display: flex;\r\n  flex-flow: column-reverse;\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n\r\n  width: 100%;\r\n}\r\n\r\n.password-iccon,\r\n.email-iccon {\r\n  position: absolute;\r\n  bottom: 6px;\r\n  right: 0;\r\n}\r\n/**\r\n* Add a transition to the label and input.\r\n* I'm not even sure that touch-action: manipulation works on\r\n* inputs, but hey, it's new and cool and could remove the \r\n* pesky delay.\r\n*/\r\nlabel,\r\ninput {\r\n  transition: all 0.2s;\r\n  touch-action: manipulation;\r\n}\r\n\r\ninput {\r\n  font-size: 14px;\r\n  border: 0;\r\n  border-bottom: 1px solid #ccc;\r\n  font-family: inherit;\r\n  -webkit-appearance: none;\r\n  border-radius: 0;\r\n  padding: 0;\r\n  cursor: text;\r\n  padding: 4px 0;\r\n}\r\n\r\ninput:focus {\r\n  outline: 0;\r\n  border-bottom: 1px solid var(--primary-color);\r\n  padding: 12px 0;\r\n}\r\n\r\nlabel {\r\n  /* text-transform: uppercase; */\r\n  /* letter-spacing: 0.05em; */\r\n  font-size: 14px;\r\n}\r\n/**\r\n* Translate down and scale the label up to cover the placeholder,\r\n* when following an input (with placeholder-shown support).\r\n* Also make sure the label is only on one row, at max 2/3rds of the\r\n* fieldâ€”to make sure it scales properly and doesn't wrap.\r\n*/\r\ninput:placeholder-shown + label {\r\n  cursor: text;\r\n  max-width: 66.66%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transform-origin: left bottom;\r\n  transform: translate(0, 1.125rem) scale(1);\r\n}\r\n\r\ninput:placeholder-shown + .form-icon {\r\n  color: red;\r\n}\r\n/**\r\n* By default, the placeholder should be transparent. Also, it should \r\n* inherit the transition.\r\n*/\r\n::-webkit-input-placeholder {\r\n  opacity: 0;\r\n  transition: inherit;\r\n}\r\n/**\r\n* Show the placeholder when the input is focused.\r\n*/\r\ninput:focus::-webkit-input-placeholder {\r\n  opacity: 1;\r\n}\r\n/**\r\n* When the element is focused, remove the label transform.\r\n* Also, do this when the placeholder is _not_ shown, i.e. when \r\n* there's something in the input at all.\r\n*/\r\ninput:not(:placeholder-shown) + label,\r\ninput:focus + label {\r\n  transform: translate(0, 0) scale(1);\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./loginPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./loginPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./loginPage.vue?vue&type=template&id=1b6eff94&scoped=true&\"\nimport script from \"./loginPage.vue?vue&type=script&lang=js&\"\nexport * from \"./loginPage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./loginPage.vue?vue&type=style&index=0&id=1b6eff94&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b6eff94\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","on","$event","preventDefault","$router","push","error","_v","_s","errors","_e","attrs","typePassword","staticRenderFns","require","components","data","credentials","email","password","disabled","methods","mapActions","login","user_email","user_password","loginUser","mounted","$store","commit","watch","handler","val","deep","immediate","computed","mapState","loading","state","validationErrors","user","component"],"sourceRoot":""}